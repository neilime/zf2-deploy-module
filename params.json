{"name":"Zf2-deploy-module","tagline":"ZF2 Deploy Module provides tools for deploying ZF2 modules into a ZendSkeletonApplication to display / tests module's views","body":"ZF2 Deploy Module, v1.0\r\n=======\r\n\r\n[![Build Status](https://travis-ci.org/neilime/zf2-deploy-module.png?branch=master)](https://travis-ci.org/neilime/zf2-deploy-module)\r\n[![Latest Stable Version](https://poser.pugx.org/neilime/zf2-deploy-module/v/stable.png)](https://packagist.org/packages/neilime/zf2-deploy-module)\r\n[![Total Downloads](https://poser.pugx.org/neilime/zf2-deploy-module/downloads.png)](https://packagist.org/packages/neilime/zf2-deploy-module)\r\n![Code coverage](https://raw.github.com/zf2-boiler-app/app-test/master/ressources/100%25-code-coverage.png \"100% code coverage\")\r\n\r\nNOTE : If you want to contribute don't hesitate, I'll review any PR.\r\n\r\nIntroduction\r\n------------\r\n\r\n__ZF2 Deploy Module__ provides tools for deploying ZF2 modules into a ZendSkeletonApplication to display / tests module's views. \r\nIt is useful for ZF2 modules developers, in order to render modules views (for humans, selenium...).\r\n\r\nThe benefit of this tool is that it does not change the module to deploy (no moving / changing / adding files), it manages the autoloading, [composer](http://getcomposer.org/) (install / update), and adding the module(s) in the application configuration.\r\n\r\nContributing\r\n------------\r\n\r\nIf you wish to contribute to ZF2 Deploy Module, please read both the [CONTRIBUTING.md](CONTRIBUTING.md) file.\r\n\r\nRequirements\r\n------------\r\n\r\n* [Zend Framework 2](https://github.com/zendframework/zf2) (2.*)\r\n\r\n## Installation\r\n\r\n### Main Setup\r\n\r\n#### By cloning project\r\n\r\n1. Clone this project into your `./vendor/` directory.\r\n\r\n#### With composer\r\n\r\n1. Add this project in your composer.json:\r\n\r\n    ```json\r\n    \"require_dev\": {\r\n        \"neilime/zf2-deploy-module\": \"dev-master\"\r\n    }\r\n    ```\r\n    \r\n    Or\r\n    \r\n    ```json\r\n    \"require\": {\r\n        \"neilime/zf2-deploy-module\": \"dev-master\"\r\n    }\r\n    ```\r\n\r\n2. Now tell composer to download __ZF2 Deploy Module__ by running the command:\r\n\r\n    ```bash\r\n    $ php composer.phar update\r\n    ```\r\n \r\n## How to use _ZF2 Deploy Module_\r\n\r\n_ZF2 Deploy Module_ provides console tools.\r\n\r\n### Usage\r\n\r\n    ```bash\r\n    php ./vendor/bin/deploy_module.php [args]\r\n    ```\r\n    \r\n### Arguments\r\n    \r\n    --help|-h                   Get usage message\r\n    --module|-m [ <string> ] \tModule path to deploy; if none provided, assumes current directory\r\n    --dir|-d [ <string> ]    \tDirectory path where to deploy the module (ex: apache/www/my-module), the directory could be created if needed\r\n    --modules|-a [ <string> ]\t(optionnal) Additionnal module namespaces (comma separated) to be used in the application\r\n    --app|-z [ <string> ]   \t(optionnal) ZendSkeletonApplication file path, allows locale or remote directory, allows archive (Phar, Rar, Zip) depending on PHP installed libraries\r\n    --composer|-c [ <string> ]  (optionnal) Composer.phar file path, allows locale or remote directory\r\n    --overwrite|-w \t\t\t\tWhether or not to overwrite existing deployed ZendSkeletonApplication\r\n    --verbose|-v \t\t\t\tWhether or not to display trace string when an error occured \r\n    \r\n## Exemple\r\n \r\n### Deploy a module to run it with EasyPhp (windows)\r\n \r\nThis exemple expects :  \r\n    * EasyPhp & PHP is installed on windows\r\n    * A virtual host named \"www.test-module.com\" redirect to DocumentRoot \"C:\\Program Files\\EasyPHP-DevServer\\data\\localweb\\TestModule\\public\"\r\n\r\n1. Install __ZF2 Deploy Module__ into the your module project as explain above\r\n\r\n2. Deploy module into EasyPhp \"\\TestModule\"\r\n    ```bash\r\n    cd path\\to\\your\\module\\directory\r\n    php ./vendor/bin/deploy_module.php -d \"C:\\Program Files\\EasyPHP-DevServer\\data\\localweb\\TestModule\" -v\r\n    ```\r\n    \r\n3. Display it in your browser \r\n    Go to http://www.test-module.com\r\n \r\n### Deploy a module for Selenium tests with \"travis-ci.org\"\r\n \r\n1. Edit your .travis.yml\r\n    ```yml\r\n    before_install:\r\n\t- \"export DISPLAY=:99.0\"\r\n\t- \"sh -e /etc/init.d/xvfb start\"\r\n    ```\r\n\r\n2. Run the build","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}